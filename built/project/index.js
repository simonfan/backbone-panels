//     backbone-panels
//     (c) simonfan
//     backbone-panels is licensed under the MIT terms.

define(["require","exports","module","lowercase-backbone","lodash","./__backbone-panels/panel-builder","./__backbone-panels/iterators","./__backbone-panels/panel-config","./__backbone-panels/event-handlers","./__backbone-panels/actions"],function(e,t,n){var r=e("lowercase-backbone"),i=e("lodash"),s=n.exports=r.view.extend({initialize:function(t){r.view.prototype.initialize.apply(this,arguments),this.initializePanels.apply(this,arguments)},initializePanels:function(t){i.bindAll(this,"handlePanelResize","handlePanelResizeStart","handlePanelResizeStop"),this.$el.css(this.css),this.panels=[],i.each(this.$el.children(),function(e,t){var n=$(e),r=n.data();r.el=n,this.addPanel(t,r)},this),this.arrange()},panelBuilder:e("./__backbone-panels/panel-builder"),panelTemplate:"<div></div>",panelClass:"panel",addPanel:function(t,n){var s;if(n.el)s=n.el;else{var o=i.isFunction(this.panelTemplate)?this.panelTemplate(n):this.panelTemplate;s=$(o)}s.addClass(this.panelClass).appendTo(this.$el);var u=this.panelBuilder(i.extend(n,{el:s,model:r.model(n)}));this.listenTo(u,"resizestart",this.handlePanelResizeStart).listenTo(u,"resize-x",this.handlePanelResize).listenTo(u,"resizestop",this.handlePanelResizeStop),this.panels.splice(t,1,u)},css:{position:"relative"}});s.proto(e("./__backbone-panels/iterators")),s.proto(e("./__backbone-panels/panel-config")),s.proto(e("./__backbone-panels/event-handlers")),s.proto(e("./__backbone-panels/actions"))});