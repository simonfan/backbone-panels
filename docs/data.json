{
    "project": {
        "name": "backbone-panels",
        "version": "0.0.0"
    },
    "files": {
        "src/__backbone-panels/arrange/boundaries.js": {
            "name": "src/__backbone-panels/arrange/boundaries.js",
            "modules": {
                "positioners": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/__backbone-panels/arrange/index.js": {
            "name": "src/__backbone-panels/arrange/index.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/__backbone-panels/arrange/position.js": {
            "name": "src/__backbone-panels/arrange/position.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/__backbone-panels/panel/animations.js": {
            "name": "src/__backbone-panels/panel/animations.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/__backbone-panels/panel/index.js": {
            "name": "src/__backbone-panels/panel/index.js",
            "modules": {
                "backbone-panels": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/__backbone-panels/panel/parse-data.js": {
            "name": "src/__backbone-panels/panel/parse-data.js",
            "modules": {
                "parse-data": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/__backbone-panels/controllers.js": {
            "name": "src/__backbone-panels/controllers.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/__backbone-panels/enable-disable.js": {
            "name": "src/__backbone-panels/enable-disable.js",
            "modules": {
                "enable-disable": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/__backbone-panels/event-handlers.js": {
            "name": "src/__backbone-panels/event-handlers.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/__backbone-panels/iterators.js": {
            "name": "src/__backbone-panels/iterators.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/__backbone-panels/panel-meta-data.js": {
            "name": "src/__backbone-panels/panel-meta-data.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/index.js": {
            "name": "src/index.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "backbone-panels": {
            "name": "backbone-panels",
            "submodules": {
                "positioners": 1,
                "parse-data": 1,
                "enable-disable": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/__backbone-panels/panel/index.js",
            "line": 1,
            "submolude": "panel-builder"
        },
        "positioners": {
            "name": "positioners",
            "submodules": {},
            "classes": {},
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "backbone-panels",
            "namespace": "",
            "file": "src/__backbone-panels/arrange/boundaries.js",
            "line": 1,
            "description": "Logic for positioning the panels at the right starting place."
        },
        "parse-data": {
            "name": "parse-data",
            "submodules": {},
            "classes": {},
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "backbone-panels",
            "namespace": "",
            "file": "src/__backbone-panels/panel/parse-data.js",
            "line": 1,
            "description": "This module controls how data is processed from DOM to the model."
        },
        "enable-disable": {
            "name": "enable-disable",
            "submodules": {},
            "classes": {},
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "backbone-panels",
            "namespace": "",
            "file": "src/__backbone-panels/enable-disable.js",
            "line": 1,
            "description": "Logic for enabling and disabling panels"
        }
    },
    "classes": {},
    "classitems": [
        {
            "file": "src/__backbone-panels/arrange/index.js",
            "line": 50,
            "description": "Puts all panels in their places\nby calculating left positions on them all.",
            "itemtype": "method",
            "name": "arrange",
            "class": "",
            "module": "backbone-panels",
            "submodule": "positioners"
        },
        {
            "file": "src/__backbone-panels/arrange/position.js",
            "line": 12,
            "description": "Returns the left position at which a given\npanel should be placed.",
            "itemtype": "method",
            "name": "calculateLeftPos",
            "params": [
                {
                    "name": "panel",
                    "description": "",
                    "type": "Bakcbone Model"
                }
            ],
            "class": "",
            "module": "backbone-panels",
            "submodule": "positioners"
        },
        {
            "file": "src/__backbone-panels/arrange/position.js",
            "line": 29,
            "description": "Set the place for the panel.",
            "itemtype": "method",
            "name": "postitionPanel",
            "params": [
                {
                    "name": "panel",
                    "description": "",
                    "type": "Backbone Model"
                }
            ],
            "class": "",
            "module": "backbone-panels",
            "submodule": "positioners"
        },
        {
            "file": "src/__backbone-panels/panel/animations.js",
            "line": 6,
            "itemtype": "method",
            "name": "bbpOpen",
            "params": [
                {
                    "name": "direction",
                    "description": "Direction to which move",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Animation options",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "backbone-panels"
        },
        {
            "file": "src/__backbone-panels/panel/animations.js",
            "line": 48,
            "description": "Partial to 'e'",
            "itemtype": "method",
            "name": "bbpOpenToE",
            "params": [
                {
                    "name": "options",
                    "description": ""
                }
            ],
            "class": "",
            "module": "backbone-panels"
        },
        {
            "file": "src/__backbone-panels/panel/animations.js",
            "line": 57,
            "description": "Partial to 'w'",
            "itemtype": "method",
            "name": "bbpOpenToW",
            "params": [
                {
                    "name": "options",
                    "description": ""
                }
            ],
            "class": "",
            "module": "backbone-panels"
        },
        {
            "file": "src/__backbone-panels/panel/animations.js",
            "line": 70,
            "itemtype": "method",
            "name": "bbpClose",
            "params": [
                {
                    "name": "direction",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "backbone-panels"
        },
        {
            "file": "src/__backbone-panels/panel/animations.js",
            "line": 117,
            "description": "Partial.",
            "itemtype": "method",
            "name": "bbpCloseToE",
            "class": "",
            "module": "backbone-panels"
        },
        {
            "file": "src/__backbone-panels/panel/animations.js",
            "line": 123,
            "description": "Partial",
            "itemtype": "method",
            "name": "bbpCloseToW",
            "class": "",
            "module": "backbone-panels"
        },
        {
            "file": "src/__backbone-panels/panel/animations.js",
            "line": 137,
            "description": "Calculates the opening direction based on the index of the panel",
            "itemtype": "method",
            "name": "calcOpenDirection",
            "class": "",
            "module": "backbone-panels"
        },
        {
            "file": "src/__backbone-panels/panel/animations.js",
            "line": 154,
            "description": "Calculates the closing direction based on the index of the panel.",
            "itemtype": "method",
            "name": "calcCloseDirection",
            "class": "",
            "module": "backbone-panels"
        },
        {
            "file": "src/__backbone-panels/panel/animations.js",
            "line": 171,
            "description": "Intelligent open\nReturns false if not able to open.",
            "itemtype": "method",
            "name": "open",
            "class": "",
            "module": "backbone-panels"
        },
        {
            "file": "src/__backbone-panels/panel/animations.js",
            "line": 185,
            "description": "Intelligent close.\n Returns false if not able to close",
            "itemtype": "method",
            "name": "close",
            "class": "",
            "module": "backbone-panels"
        },
        {
            "file": "src/__backbone-panels/panel/index.js",
            "line": 71,
            "description": "Returns whether the panel is currently resizing.",
            "class": "",
            "module": "backbone-panels"
        },
        {
            "file": "src/__backbone-panels/panel/index.js",
            "line": 80,
            "description": "The default values to be set to the panel model",
            "class": "",
            "module": "backbone-panels"
        },
        {
            "file": "src/__backbone-panels/panel/parse-data.js",
            "line": 37,
            "description": "This method retrieves the configuration data for\n a single panel from the DOM element\n\n All data returned from this method will be directly set to\n the model.",
            "itemtype": "method",
            "name": "parseData",
            "class": "",
            "module": "backbone-panels",
            "submodule": "parse-data"
        },
        {
            "file": "src/__backbone-panels/controllers.js",
            "line": 13,
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "index",
                    "description": ""
                },
                {
                    "name": "panel",
                    "description": ""
                },
                {
                    "name": "panels",
                    "description": ""
                },
                {
                    "name": "operation",
                    "description": ""
                },
                {
                    "name": "eventData",
                    "description": ""
                }
            ],
            "class": "",
            "module": "backbone-panels"
        },
        {
            "file": "src/__backbone-panels/controllers.js",
            "line": 36,
            "description": "_o:\n    loopDirection: 'shift' | 'pop'\n    move:\n    absorb:",
            "class": "",
            "module": "backbone-panels"
        },
        {
            "file": "src/__backbone-panels/controllers.js",
            "line": 139,
            "description": "Invoked whenever the panels to the left of a panel\nhave to be contracted towards the left.\nIt is a response to left-expansion on a panel.",
            "itemtype": "method",
            "name": "contractToLeft",
            "params": [
                {
                    "name": "panels",
                    "description": "",
                    "type": "Array of panels"
                },
                {
                    "name": "delta",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "backbone-panels"
        },
        {
            "file": "src/__backbone-panels/controllers.js",
            "line": 155,
            "description": "This method is called whenever a panel\nis on expansion towards the Right side,\nso that the panels right to it have to contract",
            "itemtype": "method",
            "name": "contractToRight",
            "params": [
                {
                    "name": "panels",
                    "description": "",
                    "type": "Array of panelViews"
                },
                {
                    "name": "delta",
                    "description": "",
                    "type": "+Number"
                }
            ],
            "class": "",
            "module": "backbone-panels"
        },
        {
            "file": "src/__backbone-panels/controllers.js",
            "line": 172,
            "description": "Invoked whenever the panels to the right of a panel\nhave to be expanded towards the left.\nIt is a response to right-contraction on a panel.",
            "itemtype": "method",
            "name": "expandToLeft",
            "params": [
                {
                    "name": "panels",
                    "description": "",
                    "type": "Array of panel panels"
                },
                {
                    "name": "delta",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "backbone-panels"
        },
        {
            "file": "src/__backbone-panels/controllers.js",
            "line": 189,
            "description": "Invoked whenever the panels to the left of a panel\nhave to be contracted towards the right.\nIt is a response to left-contraction on a panel.",
            "itemtype": "method",
            "name": "expandPanelsToRight",
            "params": [
                {
                    "name": "panels",
                    "description": "",
                    "type": "Array of panel panels"
                },
                {
                    "name": "delta",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "backbone-panels"
        },
        {
            "file": "src/__backbone-panels/event-handlers.js",
            "line": 12,
            "description": "Resize event handler.\nInvokes all other steps.",
            "itemtype": "method",
            "name": "handlePanelResize",
            "class": "",
            "module": "backbone-panels"
        },
        {
            "file": "src/__backbone-panels/iterators.js",
            "line": 35,
            "description": "Returns an array with only the enabled panels.",
            "itemtype": "method",
            "name": "enabledPanels",
            "class": "",
            "module": "backbone-panels"
        },
        {
            "file": "src/__backbone-panels/iterators.js",
            "line": 48,
            "description": "Retrieve all models before the given one.",
            "itemtype": "method",
            "name": "before",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Backbone Model|Number"
                }
            ],
            "class": "",
            "module": "backbone-panels"
        },
        {
            "file": "src/__backbone-panels/iterators.js",
            "line": 58,
            "description": "Retrieve all models after the given one.",
            "itemtype": "method",
            "name": "after",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Backbone Model|Number"
                }
            ],
            "class": "",
            "module": "backbone-panels"
        },
        {
            "file": "src/__backbone-panels/iterators.js",
            "line": 68,
            "itemtype": "method",
            "name": "reduceBefore",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Backbone Model|Number"
                },
                {
                    "name": "iter",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "memo",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "",
            "module": "backbone-panels"
        },
        {
            "file": "src/__backbone-panels/iterators.js",
            "line": 81,
            "itemtype": "method",
            "name": "reduceAfter",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Backbone Model|Number"
                },
                {
                    "name": "iter",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "memo",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "",
            "module": "backbone-panels"
        },
        {
            "file": "src/__backbone-panels/panel-meta-data.js",
            "line": 1,
            "class": "",
            "module": "backbone-panels"
        },
        {
            "file": "src/__backbone-panels/panel-meta-data.js",
            "line": 11,
            "description": "Retrieve the index of a given panel object.",
            "itemtype": "method",
            "name": "panelIndex",
            "params": [
                {
                    "name": "panel",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "backbone-panels"
        },
        {
            "file": "src/__backbone-panels/panel-meta-data.js",
            "line": 26,
            "description": "Returns the type of the panel.\nEither 'head', 'middle', 'tail'",
            "itemtype": "method",
            "name": "panelType",
            "params": [
                {
                    "name": "panel",
                    "description": "",
                    "type": "Panel object"
                }
            ],
            "class": "",
            "module": "backbone-panels"
        },
        {
            "file": "src/index.js",
            "line": 29,
            "description": "Initialization logic for panels view.",
            "itemtype": "method",
            "name": "initialPanels",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "backbone-panels"
        },
        {
            "file": "src/index.js",
            "line": 48,
            "description": "Array where the single panel views are stored\nin the order they appear (left->right) on the view.",
            "itemtype": "property",
            "name": "panels",
            "type": "Array",
            "class": "",
            "module": "backbone-panels"
        },
        {
            "file": "src/index.js",
            "line": 71,
            "description": "The constructor method for the single panel view.",
            "itemtype": "property",
            "name": "panelBuilder",
            "type": "Function",
            "class": "",
            "module": "backbone-panels"
        },
        {
            "file": "src/index.js",
            "line": 81,
            "description": "Adds a panel at a given index.",
            "itemtype": "method",
            "name": "addPanel",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "backbone-panels"
        },
        {
            "file": "src/index.js",
            "line": 136,
            "description": "Css to be set on the main $el.",
            "itemtype": "property",
            "name": "css",
            "type": "Object",
            "class": "",
            "module": "backbone-panels"
        },
        {
            "file": "src/index.js",
            "line": 157,
            "description": "Make the singlePanelBuilder available as a static prop\nfor easer extension.",
            "itemtype": "property",
            "name": "panelBuilder",
            "class": "",
            "module": "backbone-panels"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: submolude",
            "line": " src/__backbone-panels/panel/index.js:1"
        },
        {
            "message": "unknown tag: submolude",
            "line": " src/__backbone-panels/controllers.js:1"
        },
        {
            "message": "unknown tag: submolude",
            "line": " src/__backbone-panels/event-handlers.js:1"
        },
        {
            "message": "unknown tag: submolude",
            "line": " src/__backbone-panels/iterators.js:1"
        },
        {
            "message": "Missing item type\nReturns whether the panel is currently resizing.",
            "line": " src/__backbone-panels/panel/index.js:71"
        },
        {
            "message": "Missing item type\nThe default values to be set to the panel model",
            "line": " src/__backbone-panels/panel/index.js:80"
        },
        {
            "message": "Missing item type",
            "line": " src/__backbone-panels/controllers.js:13"
        },
        {
            "message": "Missing item type\n_o:\n    loopDirection: 'shift' | 'pop'\n    move:\n    absorb:",
            "line": " src/__backbone-panels/controllers.js:36"
        },
        {
            "message": "Missing item type",
            "line": " src/__backbone-panels/panel-meta-data.js:1"
        }
    ]
}